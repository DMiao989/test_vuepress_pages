import{_ as o,c as u,b as e,d as t,o as a}from"./app-DEJ3BKcF.js";const l={};function n(i,r){return a(),u("div",null,r[0]||(r[0]=[e("h1",{id:"vue—router-能干什么",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#vue—router-能干什么"},[e("span",null,"vue—router 能干什么？")])],-1),e("p",null,"当用户在应用中浏览不同页面时，URL 会随之更新，但页面不需要从服务器重新加载。 可以通过配置路由来告诉 Vue Router 为每个 URL 路径显示哪些组件。",-1),e("p",null,"组件 RouterView 和 RouterLink 都是全局注册的，因此它们不需要在组件模板中导入。但你也可以通过局部导入它们，例如 import { RouterLink } from 'vue-router'。",-1),e("p",null,[t("因此 "),e("code",null,"<RouterView> 和 <router-view>"),t(" 通常是等效的。此时应该遵循你自己项目中使用的约定。")],-1),e("p",null,"以 router 作为路由器实例提及。即由 createRouter() 返回的对象。在应用中，访问该对象的方式取决于上下文。例如，在组合式 API 中，它可以通过调用 useRouter() 来访问。在选项式 API 中，它可以通过 this.$router 来访问。",-1),e("p",null,"类似地，当前路由会以 route 被提及。基于不同 API 风格的组件，它可以通过 useRoute() 或 this.$route 来访问。",-1)]))}const c=o(l,[["render",n],["__file","learn_vue_router.html.vue"]]),_=JSON.parse('{"path":"/learn_vue/learn_vue_router.html","title":"vue—router 能干什么？","lang":"zh-CN","frontmatter":{},"headers":[],"git":{"updatedTime":1726724335000,"contributors":[{"name":"Ding Miao","email":"dingmiao@hollysys.com","commits":1}]},"filePathRelative":"learn_vue/learn_vue_router.md"}');export{c as comp,_ as data};
